library(gridExtra)
library(grid)
library(zoo)
g_legend<-function(a.gplot){
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)}
plotgraphs<-function(qlearning,dqlearning,sarsa,expectedsarsa, xaxis,yaxis,title)
{
colnames(qlearning) = "Q-learning (QL)"
colnames(dqlearning) = "Double Q-learning (DQL)"
colnames(sarsa) = "Sarsa (SA)"
colnames(expectedsarsa) = "Expected Sarsa (ESA)"
dqlearning
# normal_rewards = cbind(as.data.frame(qlearning[-(1:8000),]),as.data.frame(dqlearning[-(1:8000),]),as.data.frame(sarsa[-(1:8000),]),as.data.frame(expectedsarsa[-(1:8000),]));
normal_rewards = cbind(qlearning,dqlearning,sarsa,expectedsarsa);
setDT(normal_rewards);
normal_rewards$id = 1:nrow(normal_rewards);
melt(normal_rewards,id='id');
normal_rewards<-melt(normal_rewards,id='id');
current_plot<-ggplot(data = normal_rewards, aes(x = id, y = value, color = variable, group = variable), size = 1) +
ggtitle(title) + theme(plot.title = element_text(hjust = 0.5, size = 16)) +
labs(x=xaxis,y=yaxis) +
theme(axis.title.x = element_text(size=16)) +
theme(axis.title.y = element_text(size=16))+
theme(axis.text=element_text(size=15))+ geom_line(aes(y=rollmean(value, 10, na.pad=TRUE)))
return(current_plot)
}
qlearning_reward = read.table("QLearning_rewards.txt")
qlearning_nrDeaths = read.table("QLearning_nrDeaths.txt")
dqlearning_reward = read.table("DQLearning_rewards.txt")
dqlearning_nrDeaths = read.table("DQLearning_nrDeaths.txt")
sarsa_reward = read.table("Sarsa_rewards.txt")
sarsa_nrDeaths = read.table("Sarsa_nrDeaths.txt")
expectedsarsa_reward = read.table("ExpectedSarsa_rewards.txt")
expectedsarsa_nrDeaths = read.table("ExpectedSarsa_nrDeaths.txt")
first_plot<-plotgraphs(qlearning_reward,dqlearning_reward,sarsa_reward,expectedsarsa_reward, "Episode", "Mean reward per episode", "Mean reward over episode runs")
second_plot<-plotgraphs(qlearning_nrDeaths,dqlearning_nrDeaths,sarsa_nrDeaths,expectedsarsa_nrDeaths, "Episode", "Total deaths per episode", "Total volcano deaths over episode runs")
first_plot<-first_plot+theme(legend.text = element_text(size = 14))+
theme(legend.title= element_text(size = 16))+
theme(legend.position = c(0.8,8)) +
labs(colour = "algorithm")
first_plot<-first_plot+ylim(-350,0)
library(gridExtra)
mylegend<-g_legend(first_plot)
p3 <- grid.arrange(arrangeGrob(first_plot + theme(legend.position="none"),
second_plot + theme(legend.position="none"),
nrow=2),
mylegend,heights=c(10, 1))
library(ggplot2)
library(data.table)
library(gridExtra)
library(grid)
library(zoo)
g_legend<-function(a.gplot){
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)}
plotgraphs<-function(qlearning,dqlearning,sarsa,expectedsarsa, xaxis,yaxis,title)
{
colnames(qlearning) = "Q-learning (QL)"
colnames(dqlearning) = "Double Q-learning (DQL)"
colnames(sarsa) = "Sarsa (SA)"
colnames(expectedsarsa) = "Expected Sarsa (ESA)"
dqlearning
# normal_rewards = cbind(as.data.frame(qlearning[-(1:8000),]),as.data.frame(dqlearning[-(1:8000),]),as.data.frame(sarsa[-(1:8000),]),as.data.frame(expectedsarsa[-(1:8000),]));
normal_rewards = cbind(qlearning,dqlearning,sarsa,expectedsarsa);
setDT(normal_rewards);
normal_rewards$id = 1:nrow(normal_rewards);
melt(normal_rewards,id='id');
normal_rewards<-melt(normal_rewards,id='id');
current_plot<-ggplot(data = normal_rewards, aes(x = id, y = value, color = variable, group = variable), size = 1) +
ggtitle(title) + theme(plot.title = element_text(hjust = 0.5, size = 16)) +
labs(x=xaxis,y=yaxis) +
theme(axis.title.x = element_text(size=16)) +
theme(axis.title.y = element_text(size=16))+
theme(axis.text=element_text(size=15))+ geom_line(aes(y=rollmean(value, 7, na.pad=TRUE))) +
return(current_plot)
}
qlearning_reward = read.table("QLearning_rewards.txt")
qlearning_nrDeaths = read.table("QLearning_nrDeaths.txt")
dqlearning_reward = read.table("DQLearning_rewards.txt")
dqlearning_nrDeaths = read.table("DQLearning_nrDeaths.txt")
sarsa_reward = read.table("Sarsa_rewards.txt")
sarsa_nrDeaths = read.table("Sarsa_nrDeaths.txt")
expectedsarsa_reward = read.table("ExpectedSarsa_rewards.txt")
expectedsarsa_nrDeaths = read.table("ExpectedSarsa_nrDeaths.txt")
first_plot<-plotgraphs(qlearning_reward,dqlearning_reward,sarsa_reward,expectedsarsa_reward, "Episode", "Mean reward over episode runs", "Mean reward per 10 episodes")
second_plot<-plotgraphs(qlearning_nrDeaths,dqlearning_nrDeaths,sarsa_nrDeaths,expectedsarsa_nrDeaths, "Episode", "Total volcano deaths over episode runs", "Mean volcano deaths per 10 episodes")
first_plot<-first_plot+theme(legend.text = element_text(size = 14))+
theme(legend.title= element_text(size = 16))+
theme(legend.position = c(0.8,8)) +
labs(colour = "algorithm")
first_plot<-first_plot+ylim(-400,0)
library(gridExtra)
mylegend<-g_legend(first_plot)
p3 <- grid.arrange(arrangeGrob(first_plot + theme(legend.position="none"),
second_plot + theme(legend.position="none"),
nrow=2),
mylegend,heights=c(10, 1))
library(ggplot2)
library(data.table)
library(gridExtra)
library(grid)
library(zoo)
rewards = read.table("rewards.txt")
setDT(rewards);
rewards$id = 1:nrow(rewards);
library(ggplot2)
library(data.table)
library(gridExtra)
library(grid)
library(zoo)
rewards = read.table("rewards.txt")
setDT(rewards);
rewards$id = 1:nrow(rewards);
rewards
plot(rewards)
plot(rewards)
rewards<-DF(rewards)
setDF(rewards)
rewards
ggplot(rewards,(aes(x=id,y=V1)))
ggplot(rewards,(aes(x=id,y=V1)))+geom_line()
rewards = read.table("rewards.txt")
setDF(rewards)
ggplot(rewards)+geom_line()
rewards
ggplot(rewards,(aes(y=V1)))+geom_line()
ggplot(rewards,(aes(x=id,y=V1)))+geom_line()
library(ggplot2)
library(data.table)
library(gridExtra)
library(grid)
library(zoo)
rewards = read.table("rewards.txt")
setDT(rewards)
rewards$id = 1:nrow(rewards);
ggplot(rewards,(aes(x=id,y=V1)))+geom_line()
library(ggplot2)
library(data.table)
library(gridExtra)
library(grid)
library(zoo)
rewards = read.table("rewards.txt")
setDT(rewards)
rewards$id = 1:nrow(rewards);
ggplot(rewards,(aes(x=id,y=V1)))+geom_line()
library(ggplot2)
library(data.table)
library(gridExtra)
library(grid)
library(zoo)
rewards = read.table("rewards.txt")
setDT(rewards)
rewards$id = 1:nrow(rewards);
ggplot(rewards,(aes(x=id,y=V1)))+geom_line()
library(ggplot2)
library(data.table)
library(gridExtra)
library(grid)
library(zoo)
rewards = read.table("rewardsWithGoodRewardFunc.txt")
setDT(rewards)
rewards$id = 1:nrow(rewards);
ggplot(rewards,(aes(x=id,y=V1)))+geom_line()
library(ggplot2)
library(data.table)
library(gridExtra)
library(grid)
library(zoo)
rewards = read.table("rewardsWithGoodRewardFunc.txt")
setDT(rewards)
rewards$id = 1:nrow(rewards);
ggplot(rewards,(aes(x=id,y=V1)))+geom_line()
library(ggplot2)
library(data.table)
library(gridExtra)
library(grid)
library(zoo)
rewards = read.table("rewardsWall.txt")
setDT(rewards)
rewards$id = 1:nrow(rewards);
ggplot(rewards,(aes(x=id,y=V1)))+geom_line()
library(ggplot2)
library(data.table)
library(gridExtra)
library(grid)
library(zoo)
rewards = read.table("rewardsSimpleWall.txt")
setDT(rewards)
rewards$id = 1:nrow(rewards);
ggplot(rewards,(aes(x=id,y=V1)))+geom_line()
library(ggplot2)
library(data.table)
library(gridExtra)
library(grid)
library(zoo)
rewards = read.table("rewardsSimpleWall.txt")
setDT(rewards)
rewards$id = 1:nrow(rewards);
ggplot(rewards,(aes(x=id,y=V1)))+geom_line()
library(ggplot2)
library(data.table)
library(gridExtra)
library(grid)
library(zoo)
rewards = read.table("rewardsSimpleOpponent.txt")
setDT(rewards)
rewards$id = 1:nrow(rewards);
ggplot(rewards,(aes(x=id,y=V1)))+geom_line()
library(ggplot2)
library(data.table)
library(gridExtra)
library(grid)
library(zoo)
rewards = read.table("rewardsSimpleOpponentTest.txt")
setDT(rewards)
rewards$id = 1:nrow(rewards);
ggplot(rewards,(aes(x=id,y=V1)))+geom_line()
library(ggplot2)
library(data.table)
library(gridExtra)
library(grid)
library(zoo)
rewards = read.table("rewardsSimpleOpponentTest.txt")
setDT(rewards)
rewards$id = 1:nrow(rewards);
ggplot(rewards,(aes(x=id,y=V1)))+geom_line()
library(ggplot2)
library(data.table)
library(gridExtra)
library(grid)
library(zoo)
rewards = read.table("rewardsSimpleOpponentTest.txt")
setDT(rewards)
rewards$id = 1:nrow(rewards);
ggplot(rewards,(aes(x=id,y=V1)))+geom_line()
rewards = read.table("rewardsSimpleOpponent.txt")
library(ggplot2)
library(data.table)
library(gridExtra)
library(grid)
library(zoo)
rewards = read.table("rewardsSimpleOpponent.txt")
setDT(rewards)
rewards$id = 1:nrow(rewards);
ggplot(rewards,(aes(x=id,y=V1)))+geom_line()
library(ggplot2)
library(data.table)
library(gridExtra)
library(grid)
library(zoo)
rewards = read.table("rewardsSimpleOpponentTest.txt")
setDT(rewards)
rewards$id = 1:nrow(rewards);
ggplot(rewards,(aes(x=id,y=V1)))+geom_line()
library(ggplot2)
library(data.table)
library(gridExtra)
library(grid)
library(zoo)
rewards = read.table("rewardsSimpleOpponentTest.txt")
setDT(rewards)
rewards$id = 1:nrow(rewards);
ggplot(rewards,(aes(x=id,y=V1)))+geom_line()
library(ggplot2)
library(data.table)
library(gridExtra)
library(grid)
library(zoo)
rewards = read.table("rewardsSimpleOpponent.txt")
setDT(rewards)
rewards$id = 1:nrow(rewards);
ggplot(rewards,(aes(x=id,y=V1)))+geom_line()
library(ggplot2)
library(data.table)
library(gridExtra)
library(grid)
library(zoo)
rewards = read.table("rewardsSimpleOpponent.txt")
setDT(rewards)
rewards$id = 1:nrow(rewards);
ggplot(rewards,(aes(x=id,y=V1)))+geom_line()
library(ggplot2)
library(data.table)
library(gridExtra)
library(grid)
library(zoo)
rewards = read.table("opponentPredictionLosses.txt")
setDT(rewards)
rewards$id = 1:nrow(rewards);
ggplot(rewards,(aes(x=id,y=V1)))+geom_line()
library(ggplot2)
library(data.table)
library(gridExtra)
library(grid)
library(zoo)
rewards = read.table("opponentPredictionLosses.txt")
setDT(rewards)
rewards$id = 1:nrow(rewards);
ggplot(rewards,(aes(x=id,y=V1)))+geom_line()
library(ggplot2)
library(data.table)
library(gridExtra)
library(grid)
library(zoo)
rewards = read.table("opponentPredictionPercentage.txt")
setDT(rewards)
rewards$id = 1:nrow(rewards);
ggplot(rewards,(aes(x=id,y=V1)))+geom_line()
library(ggplot2)
library(data.table)
library(gridExtra)
library(grid)
library(zoo)
rewards = read.table("rewardsUnimportant.txt")
setDT(rewards)
rewards$id = 1:nrow(rewards);
ggplot(rewards,(aes(x=id,y=V1)))+geom_line()
library(ggplot2)
library(data.table)
library(gridExtra)
library(grid)
library(zoo)
rewards = read.table("rewardsUnimportant.txt")
setDT(rewards)
rewards$id = 1:nrow(rewards);
ggplot(rewards,(aes(x=id,y=V1)))+geom_line()
library(ggplot2)
library(data.table)
library(gridExtra)
library(grid)
library(zoo)
rewards = read.table("opponentPredictionPercentageWithWalls.txt")
setDT(rewards)
rewards$id = 1:nrow(rewards);
ggplot(rewards,(aes(x=id,y=V1)))+geom_line()
library(ggplot2)
library(data.table)
library(gridExtra)
library(grid)
library(zoo)
rewards = read.table("opponentPredictionLossesWithWalls.txt")
setDT(rewards)
rewards$id = 1:nrow(rewards);
ggplot(rewards,(aes(x=id,y=V1)))+geom_line()
library(ggplot2)
library(data.table)
library(gridExtra)
library(grid)
library(zoo)
rewards = read.table("opponentPredictionPercentageWithWalls.txt")
setDT(rewards)
rewards$id = 1:nrow(rewards);
ggplot(rewards,(aes(x=id,y=V1)))+geom_line()
library(ggplot2)
library(data.table)
library(gridExtra)
library(grid)
library(zoo)
rewards = read.table("opponentPredictionPercentageSARSA.txt")
setDT(rewards)
rewards$id = 1:nrow(rewards);
ggplot(rewards,(aes(x=id,y=V1)))+geom_line()+ggtitle("Q-Learning in a simple game")+
theme(plot.title = element_text(hjust = 0.5, size = 16)) +
labs(x="Episode Number",y="Total Reward Per Episode")
theme(axis.title.x = element_text(size=16)) +
theme(axis.title.y = element_text(size=16))+
theme(axis.text=element_text(size=15))
library(ggplot2)
library(data.table)
library(gridExtra)
library(grid)
library(zoo)
rewards = read.table("opponentPredictionPercentageSARSA.txt")
setDT(rewards)
rewards$id = 1:nrow(rewards);
ggplot(rewards,(aes(x=id,y=V1)))+geom_line()+ggtitle("Q-Learning in a simple game")+
theme(plot.title = element_text(hjust = 0.5, size = 16)) +
labs(x="Episode Number",y="Total Reward Per Episode")
theme(axis.title.x = element_text(size=16)) +
theme(axis.title.y = element_text(size=16))+
theme(axis.text=element_text(size=15))
library(ggplot2)
library(data.table)
library(gridExtra)
library(grid)
library(zoo)
rewards = read.table("opponentPredictionPercentageSARSA.txt")
setDT(rewards)
rewards$id = 1:nrow(rewards);
ggplot(rewards,(aes(x=id,y=V1)))+geom_line()+ggtitle("Q-Learning in a simple game")+
theme(plot.title = element_text(hjust = 0.5, size = 16)) +
labs(x="Episode Number",y="Total Reward Per Episode")
theme(axis.title.x = element_text(size=16)) +
theme(axis.title.y = element_text(size=16))+
theme(axis.text=element_text(size=15))
library(ggplot2)
library(data.table)
library(gridExtra)
library(grid)
library(zoo)
rewards = read.table("opponentPredictionPercentageSARSA.txt")
setDT(rewards)
rewards$id = 1:nrow(rewards);
ggplot(rewards,(aes(x=id,y=V1)))+geom_line()+ggtitle("Q-Learning in a simple game")+
theme(plot.title = element_text(hjust = 0.5, size = 16)) +
labs(x="Episode Number",y="Total Reward Per Episode")
theme(axis.title.x = element_text(size=16)) +
theme(axis.title.y = element_text(size=16))+
theme(axis.text=element_text(size=15))
library(ggplot2)
library(data.table)
library(gridExtra)
library(grid)
library(zoo)
rewards = read.table("opponentPredictionPercentageSARSA.txt")
setDT(rewards)
rewards$id = 1:nrow(rewards);
ggplot(rewards,(aes(x=id,y=V1)))+geom_line()+ggtitle("Q-Learning in a simple game")+
theme(plot.title = element_text(hjust = 0.5, size = 16)) +
labs(x="Episode Number",y="Total Reward Per Episode")
theme(axis.title.x = element_text(size=16)) +
theme(axis.title.y = element_text(size=16))+
theme(axis.text=element_text(size=15))
library(ggplot2)
library(data.table)
library(gridExtra)
library(grid)
library(zoo)
rewards = read.table("opponentPredictionPercentageSARSA.txt")
setDT(rewards)
rewards$id = 1:nrow(rewards);
ggplot(rewards,(aes(x=id,y=V1)))+geom_line()+ggtitle("Q-Learning in a simple game")+
theme(plot.title = element_text(hjust = 0.5, size = 16)) +
labs(x="Episode Number",y="Total Reward Per Episode")
theme(axis.title.x = element_text(size=16)) +
theme(axis.title.y = element_text(size=16))+
theme(axis.text=element_text(size=15))
library(ggplot2)
library(data.table)
library(gridExtra)
library(grid)
library(zoo)
rewards = read.table("opponentPredictionPercentageSARSA.txt")
setDT(rewards)
rewards$id = 1:nrow(rewards);
ggplot(rewards,(aes(x=id,y=V1)))+geom_line()+ggtitle("Q-Learning in a simple game")+
theme(plot.title = element_text(hjust = 0.5, size = 16)) +
labs(x="Episode Number",y="Total Reward Per Episode")
theme(axis.title.x = element_text(size=16)) +
theme(axis.title.y = element_text(size=16))+
theme(axis.text=element_text(size=15))
library(ggplot2)
library(data.table)
library(gridExtra)
library(grid)
library(zoo)
rewards = read.table("opponentPredictionPercentageSARSA.txt")
setDT(rewards)
rewards$id = 1:nrow(rewards);
ggplot(rewards,(aes(x=id,y=V1)))+geom_line()+ggtitle("Q-Learning in a simple game")+
theme(plot.title = element_text(hjust = 0.5, size = 16)) +
labs(x="Episode Number",y="Total Reward Per Episode")
theme(axis.title.x = element_text(size=16)) +
theme(axis.title.y = element_text(size=16))+
theme(axis.text=element_text(size=15))
library(ggplot2)
library(data.table)
library(gridExtra)
library(grid)
library(zoo)
rewards = read.table("opponentPredictionPercentageSARSA.txt")
setDT(rewards)
rewards$id = 1:nrow(rewards);
ggplot(rewards,(aes(x=id,y=V1)))+geom_line()+ggtitle("Q-Learning in a simple game")+
theme(plot.title = element_text(hjust = 0.5, size = 16)) +
labs(x="Episode Number",y="Total Reward Per Episode")
theme(axis.title.x = element_text(size=16)) +
theme(axis.title.y = element_text(size=16))+
theme(axis.text=element_text(size=15))
library(ggplot2)
library(data.table)
library(gridExtra)
library(grid)
library(zoo)
rewards = read.table("opponentPredictionPercentageSARSA.txt")
setDT(rewards)
rewards$id = 1:nrow(rewards);
ggplot(rewards,(aes(x=id,y=V1)))+geom_line()+ggtitle("Q-Learning in a simple game")+
theme(plot.title = element_text(hjust = 0.5, size = 16)) +
labs(x="Episode Number",y="Total Reward Per Episode")
theme(axis.title.x = element_text(size=16)) +
theme(axis.title.y = element_text(size=16))+
theme(axis.text=element_text(size=15))
library(ggplot2)
library(data.table)
library(gridExtra)
library(grid)
library(zoo)
rewards = read.table("opponentPredictionPercentageSARSA.txt")
setDT(rewards)
rewards$id = 1:nrow(rewards);
ggplot(rewards,(aes(x=id,y=V1)))+geom_line()+ggtitle("Q-Learning in a simple game")+
theme(plot.title = element_text(hjust = 0.5, size = 16)) +
labs(x="Episode Number",y="Total Reward Per Episode")
theme(axis.title.x = element_text(size=16)) +
theme(axis.title.y = element_text(size=16))+
theme(axis.text=element_text(size=15))
